s1 = {'red','yellow','green','blue'}
print('red' not in s1)
print('white not' in s1)



# [요구사항]
# 냉장고에 딸기, 바나나, 오렌지, 사과가 있다. 과일들이 set을 생성하기

# 1) 냉장고에 바나나가 있는지 확인하기
# 2) 과일등 중 바나나를 먹고 멜론을 사와서 냉장고에 넣었을 대 남아 있는 과일은 무엇인가?
# 3) 냉장고에 남아 있는 과일 개수는 몇개인가?


# 1) len() 함수 
#  len(color)

# 2) 교집합 &
#  s1 = {0,1,2,3,4}
#  s2 = {3,4,5,6,7}

#  print(s1 & s2)  

# 3) 합집합 |
# print( s1 | s2 )

# 4) 차집합 -
# print( s1  -  s2)

# 5) 특정 원소가 set에 있는지 확인하는 연산 in
# s1 = set{'red','yellow','green','blue'}
# print('red' in s1)
# print('white' in s1)




fruit = {'딸기', '바나나', '오렌지', '사과'}
# 확인하기 = 
existence ='바나나' in fruit
# 바나나먹어 remove
fruit.remove('바나나')
# 멜론 넣어 .add
fruit.add('멜론')
# 남은 갯수len
len(fruit)
print(len(fruit))

# 문제) 
# 어떤 회사의 사원으로 홍길동 이수지 박상민 강민우 하누리가 있다. 
# 그 중 지각을 한 사원은 홍길동, 이수지, 박상민이다. 결근을 한 사원은 박상민 하누리이다. 

# (1) 지각과 결근을 한번도 하지 않은 사원에게 보너스 급여을 줄 때 보너스 급여을 받는 사원은 누구인가?


# (2) 지각과 결근은 모두 한 사원에게 야근을 시키려 할 때 야근할 사원은 누구인가?

# [문제 해결 알고리즘]
# 1단계 사원, 지각한 사원, 결근한 사원은 set생성
# 2단계 보너스 급여을 받을 사원
#       지각과 결근 둘 중 하나라고 한 사람들의 set생성
#       전체 사원 set에서 지각과 결근 중 하나라도도 한 사람들 제거(차집합) 한다.
# 3단계 야근을 해야 하는 사원
#      지각을 한 사원 set와 결근을 한 사원 set의 교집합을 한다

member = {'홍길동', '이수지', '박상민','강민우', '하누리'}

late = {'홍길동', '이수지', '박상민' }
off ={'박상민', '하누리'}

print(member - late -off) #보너스

print(late & off) # 야근









































































































